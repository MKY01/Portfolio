#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
This is a program which reads in an excel file, clean the data, plot the data to show the current trends.
If I have more time, I will use Machine Learning to produce regression for predictions.
"""

__author__ = 'Man Kit Yip'
__copyright_ = 'MKY01'
__credit__ = 'Spart Global'
__license__ = 'gpl-3.0'
__version__ = '0.0.1'
__email__ = 'myip01@dcs.bbk.ac.uk'


import numpy as np
import scipy as sp
import pandas as pd
import matplotlib.pyplot as plt
import sklearn as sk


#reads in spreadsheet as dataframes
xls = pd.ExcelFile('data_analyst_task-data.xlsx')
print(xls.sheet_names)


#extract the relevant tables from the raw data
df1 = (xls.parse(sheet_name = 'Ave. Global Sea Surface Temp', skiprows = 0))
df2 = (xls.parse(sheet_name = 'Gbl surf. Temp (land & sea)', skiprows = 4))
df3 = (xls.parse(sheet_name = 'Global CO2', skiprows = 4))


#look at the data structure
df1.info()
df2.info()
df3.info()


#Clean out empty rows and any strings
df2.dropna(how = 'all', axis=0 , inplace = True)
df2.replace('A-Za-z', '', regex = True)


#replace the missing values with mean in the whole dataframe
df2.fillna(df2.mean(), inplace = True)


#stacked the data to make it neater
idx = ['Year']
multi_indexed_df1 = df1.set_index(idx)
multi_indexed_df1.head(2)
stacked_df1 = multi_indexed_df1.stack(dropna=False)
print(stacked_df1)


#averaged out the data from different sources
col = df2.loc[: ,'Lower troposphere (measured by satellite) (UAH)':'Lower troposphere (measured by satellite) (RSS)']
df2['Lower troposphere (measured by satellite) (Average)'] = col.mean(axis = 1)
mean_df2 = df2.drop(['Lower troposphere (measured by satellite) (UAH)', 'Lower troposphere (measured by satellite) (RSS)'], axis = 1)
print(mean_df2)


#rounded up the data to the nearest Million Metric (Tons)
new_df3 = df3.astype(float).round().astype(int)
print(new_df3)


#Merge the dataframes
df23 = pd.merge(mean_df2, new_df3, how='left', on=['Year'], sort=True)
df123 = pd.merge(stacked_df1.to_frame(), df23, how= 'left', on=['Year'], sort=True)


#rename the columns with abbreviated form of the units in brackets
df123.columns = ['Year', 'Anomaly (F)', 'Earth Surface (F)', 'Lower Troposphere (F)', 'Energy (MMT)', 'International transport (MMT)', 'Agriculture (MMT)', 'Industrial processes (MMT)', 'Waste (MMT)', 'Land use change & forestry (MMT)']
df123.info()

#print to excelfile
writer = pd.ExcelWriter('data_scientist_output-data.xlsx')
df123.to_excel(writer, 'Wrangled_data.xlsx')
writer.save()


#select different columns from the dataframes for the x axis and y axis
#plot a scatter graph to how the global temperature changes over the years
plt.scatter(df123['Year'], df123['Anomaly (F)'], label = 'Sea Temperature (F)', color = 'red' )
plt.scatter(df123['Year'], df123['Earth Surface (F)'], label = 'Sea & land Temp (F)', color = 'blue')
plt.scatter(df123['Year'], df123['Lower Troposphere (F)'], label = 'Atmospheric Temp (F)', color = 'blue')
plt.legend(loc = 'upper left')
plt.title('Scatter graph showing the global temperature between 1880 - 2015', size = 'large')
plt.ylabel('Temperature fluctuation (F)', size = 'medium')
plt.xlabel('Year', size = 'medium')
plt.savefig('Figure1')
plt.show()


#plot a bar chart to show the sources of CO2 production between 1990 and 2010
plt.bar(df123['Year'], df123['Energy (MMT)'], label = 'Energy', color = 'yellow' )
plt.bar(df123['Year'], df123['International transport (MMT)'], label = 'International transport', color = 'black')
plt.bar(df123['Year'], df123['Agriculture (MMT)'], label = 'Agriculture (MMT)', color = 'green')
plt.bar(df123['Year'], df123['Industrial processes (MMT)'], label = 'Industrial processes', color = 'purple')
plt.bar(df123['Year'], df123['Waste (MMT)'], label = 'Waste', color = 'brown')
plt.bar(df123['Year'], df123['Land use change & forestry (MMT)'], label = 'Forestry', color = 'red')
plt.legend(loc = 'upper left')
plt.title('Bar chart showing the global CO2 emissions within 20 years', size = 'large')
plt.ylabel('Global emissions of Carbon Dioxide (MMT)', size = 'medium')
plt.xlabel('The green house Gas generated by Human (Year)', size = 'medium')
plt.savefig('Figure2')
plt.show()


# Create a scatter matrix to show the correlations between global CO2 production and global Temperature (F)
plt.style.use('ggplot')
pd.plotting.scatter_matrix(df123, alpha = 0.2, figsize = (8, 8), diagonal = 'kde')
plt.tick_params(axis='both', which='major', labelsize=6)
plt.tick_params(axis='both', which='minor', labelsize=6)
plt.savefig('Figure3')
plt.show()




if __name__ == '__main__':
    main()
